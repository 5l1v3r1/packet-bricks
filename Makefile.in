#---------------------------------------------------------------------#
CC := @CC@
LUALIBPATH := @LUALIBPATH@
LUAINCPATH := @LUAINCPATH@
JEINCPATH := @JEINCPATH@
CFLAGS := @CFLAGS@
LDFLAGS := @LDFLAGS@
BINDIR := $(shell pwd)/bin
BINNAME := pacf
BIN := $(BINDIR)/$(BINNAME)
OSARCH := $(shell uname)
OSARCH := $(findstring $(OSARCH),FreeBSD Linux Darwin)
DEBUG_CFLAGS := -g -DDEBUG -Wall -Werror -Wunused-function -Wextra -D_GNU_SOURCE -D__USE_GNU
DEBUG_CFLAGS += -DDLUA -DDPKTENG -DDNMP -DDUTIL -DDIFACE -DDBKEND -DDPKTHASH -DDRULE
#---------------------------------------------------------------------#
ifeq ($V,) # no echo
    export MSG=@echo
    export HIDE=@
else
    export MSG=@\#
    export HIDE=
endif

export OSARCH
export OBJDIR := $(shell pwd)/.objs
export CFLAGS += -O3 -pipe -Wall -Wunused-function -Wextra -Werror -D_GNU_SOURCE -D__USE_GNU 
export NETMAP_INCLUDE := -I$(shell pwd)/include/netmap

ifeq ($(OSARCH),FreeBSD)
	export INCLUDE := -I$(shell pwd)/include -I$(LUAINCPATH)/ -Isys/sys/
	export LIBS := -L$(LUALIBPATH)/ -llua-5.1 -lpthread
	export LDFLAGS += $(LIBS)
else
	export INCLUDE := -I$(shell pwd)/include -I$(LUAINCPATH)/
	export LIBS := -L$(LUALIBPATH)/ -llua5.1 -lpthread

	ifneq ($(strip $(JEINCPATH)),)
		export INCLUDE += -I$(JEINCPATH)
		export LDFLAGS += $(LIBS) -L$(JELIBPATH) -fno-builtin-malloc \
		-fno-builtin-calloc -fno-builtin-realloc -fno-builtin-free \
		-fno-builtin-posix_memalign -ljemalloc
	else
		export LDFLAGS += $(LIBS)
	endif
endif
#---------------------------------------------------------------------#
all: $(BINNAME)

objs:
	mkdir -p $(OBJDIR)
	cd src && $(MAKE)

objs-dbg:
	$(eval export CFLAGS := $(DEBUG_CFLAGS))
	mkdir -p $(OBJDIR)
	cd src && $(MAKE)

$(BINNAME): objs
	mkdir -p $(BINDIR)
	$(MSG) "   LD $@"
	$(HIDE) $(CC) $(OBJDIR)/*.o $(LDFLAGS) -o $(BIN)
	@echo "#!/bin/bash\n$(BINDIR)/$(BINNAME) -d $$""@"> $(BINDIR)/$(BINNAME)-server
	@echo "#!/bin/bash\n$(BINDIR)/$(BINNAME) -s $$""@"> $(BINDIR)/$(BINNAME)-shell
	@echo "#!/bin/bash\npkill $(BINNAME)"> $(BINDIR)/$(BINNAME)-kill-server
	chmod a+x $(BINDIR)/$(BINNAME)-server
	chmod a+x $(BINDIR)/$(BINNAME)-shell
	chmod a+x $(BINDIR)/$(BINNAME)-kill-server
	strip $(BIN)

run: $(BINNAME)
	$(BIN) -f scripts/startup.lua
#---------------------------------------------------------------------#
debug: $(BINNAME)-debug

$(BINNAME)-debug: objs-dbg
	mkdir -p $(BINDIR)
	$(MSG) "   LD $@-debug"
	$(HIDE) $(CC) $(OBJDIR)/*.o $(LDFLAGS) -o $(BIN)
	@echo "#!/bin/bash\n$(BINDIR)/$(BINNAME) -d $$""@" > $(BINDIR)/$(BINNAME)-server
	@echo "#!/bin/bash\n$(BINDIR)/$(BINNAME) -s $$""@"> $(BINDIR)/$(BINNAME)-shell
	@echo "#!/bin/bash\npkill $(BINNAME)"> $(BINDIR)/$(BINNAME)-kill-server
	chmod a+x $(BINDIR)/$(BINNAME)-server
	chmod a+x $(BINDIR)/$(BINNAME)-shell
	chmod a+x $(BINDIR)/$(BINNAME)-kill-server
#---------------------------------------------------------------------#
clean:
	cd src && $(MAKE) clean
	$(RM) -rf $(BINDIR) include/*~ tags scripts/*~ *~

distclean: clean
	cd src && $(MAKE) distclean
	$(RM) -rf Makefile autom4te.cache config.log config.status

.PHONY: clean

tags:
	find -name '*.c' -or -name '*.h' | xargs ctags
#---------------------------------------------------------------------#
